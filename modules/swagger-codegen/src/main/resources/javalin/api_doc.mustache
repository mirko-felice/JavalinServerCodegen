## General

Each api generated contains base implementation which includes:

1) Registration of all specified routes. The routes will be created for the schemes specified globally.
For *http/https* schemes will be created a route for each path.
For *ws/wss* schemes will be created a single WebSocket routing for the path defined by the baseName value. Each message received (unless changed) MUST begin with the specified path, followed by '>:' that is needed to recognise the request made by the client.
Because WebSocket can communicate only by messages if some routes need the sending of files that are not plain text, it is provided the receiving of binary messages that must be managed and implemented by the user.

If no GLOBAL scheme was specified the stub will contain ONLY *http* routes and respective methods.

2) For each http/https route a method containing code that extracts data sent by the client. The data extracted include:
    - Files;
    - Consumes //TOCOMPLETE;
    - Information needed to authenticate the user for this path;
    - Path parameters;
    - Query parameters;
    - Form parameters;
    - Headers of the request;
    - Body of the request;
    - Behaviour (this is NOT implemented);

At the end is available the behaviour for each response available for the path, basing on the code set by the behaviour which corresponds to the response code of the server.

3) For each ws/wss route a method containing code that extracts data sent by the client. Till WebSocket interface can send only messages the amount of information extracted is less:
    - Message sent;
    - Path parameters;
    - Query parameter;
    - Headers;

At the end the response is sent back to the client.

## TODO

In each method relative to a path must be implemented the behaviour that the server must have in response to the request of the client.